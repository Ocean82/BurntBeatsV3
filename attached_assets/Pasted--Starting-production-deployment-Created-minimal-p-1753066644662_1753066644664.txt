========================================
🚀 Starting production deployment...
🚀 Created minimal production server
🎨 Created basic client interface
📦 Created production package.json
📋db.ts:5:16 - error TS7016: Could not find a declaration file for module 'ws'. '/home/runner/workspace/node_modules/ws/index.js' implicitly has an 'any' type.
  Try `npm i --save-dev @types/ws` if it exists or add a new declaration (.d.ts) file containing `declare module 'ws';`

5 import ws from 'ws';
                 ~~~~

db.ts:6:25 - error TS6059: File '/home/runner/workspace/shared/schema.ts' is not under 'rootDir' '/home/runner/workspace/server'. 'rootDir' is expected to contain all source files.
  The file is in the program because:
    Imported via '../shared/schema.js' from file '/home/runner/workspace/server/db.ts'
    Imported via '../shared/schema.js' from file '/home/runner/workspace/server/index.ts'

6 import * as schema from '../shared/schema.js';
                          ~~~~~~~~~~~~~~~~~~~~~

  index.ts:17:33
    17 import type { User, Song } from '../shared/schema.js';
                                       ~~~~~~~~~~~~~~~~~~~~~
    File is included via import here.

db.ts:80:11 - error TS2488: Type 'any[] | QueryResult<never>' must have a '[Symbol.iterator]()' method that returns an iterator.

80     const [song] = await db.insert(schema.songs).values(songData).returning();
             ~~~~~~

db.ts:87:16 - error TS2353: Object literal may only specify known properties, and 'id' does not exist in type 'SQL<unknown>'.

87       .where({ id })
                  ~~

db.ts:95:16 - error TS2353: Object literal may only specify known properties, and 'id' does not exist in type 'SQL<unknown>'.

95       .where({ id })
                  ~~

db.ts:103:16 - error TS2353: Object literal may only specify known properties, and 'userId' does not exist in type 'SQL<unknown> | ((aliases: { id: PgColumn<{ name: "id"; tableName: "voice_samples"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; deletedAt: PgColumn<...>; }) => SQL<...'.

103       .where({ userId, isDeleted: false })
                   ~~~~~~

db.ts:104:16 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(builder: (aliases: { id: PgColumn<{ name: "id"; tableName: "voice_samples"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; deletedAt: PgColumn<...>; }) => ValueOrArray<...>): Omit<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '(aliases: { id: PgColumn<{ name: "id"; tableName: "voice_samples"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; deletedAt: PgColumn<...>; })...'.
  Overload 2 of 2, '(...columns: (SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | Aliased<unknown>)[]): Omit<PgSelectBase<"voice_samples", ... 6 more ..., { ...; }>, "where" | "orderBy">', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | Aliased<unknown>'.

104       .orderBy('createdAt DESC');
                   ~~~~~~~~~~~~~~~~


db.ts:115:16 - error TS2353: Object literal may only specify known properties, and 'id' does not exist in type 'SQL<unknown>'.

115       .where({ id })
                   ~~

db.ts:123:16 - error TS2353: Object literal may only specify known properties, and 'userId' does not exist in type 'SQL<unknown> | ((aliases: { id: PgColumn<{ name: "id"; tableName: "voice_clones"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; deletedAt: PgColumn<...>; }) => SQL<....'.

123       .where({ userId, isDeleted: false })
                   ~~~~~~

db.ts:124:16 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(builder: (aliases: { id: PgColumn<{ name: "id"; tableName: "voice_clones"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; deletedAt: PgColumn<...>; }) => ValueOrArray<...>): Omit<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '(aliases: { id: PgColumn<{ name: "id"; tableName: "voice_clones"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; deletedAt: PgColumn<...>; }) ...'.
  Overload 2 of 2, '(...columns: (SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | Aliased<unknown>)[]): Omit<PgSelectBase<"voice_clones", ... 6 more ..., { ...; }>, "where" | "orderBy">', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | Aliased<unknown>'.

124       .orderBy('createdAt DESC');
                   ~~~~~~~~~~~~~~~~


db.ts:144:61 - error TS18046: 'error' is of type 'unknown'.

144       return { status: 'unhealthy', database: false, error: error.message };
                                                                ~~~~~

index.ts:43:3 - error TS2322: Type '"2024-06-20"' is not assignable to type '"2025-06-30.basil"'.

43   apiVersion: '2024-06-20', // IMPORTANT: Keep this version synchronized with Stripe dashboard
     ~~~~~~~~~~

index.ts:58:18 - error TS2345: Argument of type '{ contentSecurityPolicy: { directives: { defaultSrc: string[]; styleSrc: string[]; fontSrc: string[]; scriptSrc: string[]; imgSrc: string[]; connectSrc: string[]; mediaSrc: string[]; objectSrc: string[]; frameSrc: string[]; }; }; crossOriginEmbedderPolicy: boolean; crossOriginResourcePolicy: { ...; }; }' is not assignable to parameter of type 'Readonly<HelmetOptions> | undefined'.
  Type '{ contentSecurityPolicy: { directives: { defaultSrc: string[]; styleSrc: string[]; fontSrc: string[]; scriptSrc: string[]; imgSrc: string[]; connectSrc: string[]; mediaSrc: string[]; objectSrc: string[]; frameSrc: string[]; }; }; crossOriginEmbedderPolicy: boolean; crossOriginResourcePolicy: { ...; }; }' is not assignable to type 'Readonly<{ contentSecurityPolicy?: boolean | ContentSecurityPolicyOptions | undefined; crossOriginEmbedderPolicy?: boolean | CrossOriginEmbedderPolicyOptions | undefined; crossOriginOpenerPolicy?: boolean | ... 1 more ... | undefined; crossOriginResourcePolicy?: boolean | ... 1 more ... | undefined; originAgentClust...'.
    Types of property 'crossOriginResourcePolicy' are incompatible.
      Type '{ policy: string; }' is not assignable to type 'boolean | CrossOriginResourcePolicyOptions | undefined'.
        Type '{ policy: string; }' is not assignable to type 'CrossOriginResourcePolicyOptions'.
          Types of property 'policy' are incompatible.
            Type 'string' is not assignable to type '"cross-origin" | "same-origin" | "same-site" | undefined'.

58   app.use(helmet(productionConfig.security.helmet));
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

index.ts:212:16 - error TS18046: 'error' is of type 'unknown'.

212       message: error.message
                   ~~~~~

index.ts:225:54 - error TS2345: Argument of type 'string | string[] | undefined' is not assignable to parameter of type 'string | string[] | Buffer<ArrayBufferLike>'.
  Type 'undefined' is not assignable to type 'string | string[] | Buffer<ArrayBufferLike>'.

225     event = stripe.webhooks.constructEvent(req.body, sig, webhookSecret);
                                                         ~~~

index.ts:227:61 - error TS18046: 'err' is of type 'unknown'.

227     console.error('Webhook signature verification failed:', err.message);
                                                                ~~~

index.ts:228:51 - error TS18046: 'err' is of type 'unknown'.

228     return res.status(400).send(`Webhook Error: ${err.message}`);
                                                      ~~~

index.ts:515:50 - error TS18046: 'error' is of type 'unknown'.

515       error: `Complete song generation failed: ${error.message}`
                                                     ~~~~~

index.ts:533:61 - error TS18046: 'error' is of type 'unknown'.

533     res.status(500).json({ error: `Failed to get library: ${error.message}` });
                                                                ~~~~~

index.ts:579:30 - error TS2552: Cannot find name 'RVCService'. Did you mean 'rvcService'?

579       const rvcService = new RVCService();
                                 ~~~~~~~~~~

  index.ts:579:13
    579       const rvcService = new RVCService();
                    ~~~~~~~~~~
    'rvcService' is declared here.

index.ts:586:36 - error TS2552: Cannot find name 'AudioLDM2Service'. Did you mean 'audioldm2Service'?

586       const audioldm2Service = new AudioLDM2Service();
                                       ~~~~~~~~~~~~~~~~

  index.ts:586:13
    586       const audioldm2Service = new AudioLDM2Service();
                    ~~~~~~~~~~~~~~~~
    'audioldm2Service' is declared here.

index.ts:598:17 - error TS18046: 'midiResult' is of type 'unknown'.

598       midiPath: midiResult.midiPath,
                    ~~~~~~~~~~

index.ts:607:62 - error TS18046: 'error' is of type 'unknown'.

607     res.status(500).json({ error: `Song generation failed: ${error.message}` });
                                                                 ~~~~~

index.ts:612:7 - error TS7034: Variable 'requiredEnvVars' implicitly has type 'any[]' in some locations where its type cannot be determined.

612 const requiredEnvVars = [];
          ~~~~~~~~~~~~~~~

index.ts:613:24 - error TS7005: Variable 'requiredEnvVars' implicitly has an 'any[]' type.

613 const missingEnvVars = requiredEnvVars.filter(envVar => !process.env[envVar]);
                           ~~~~~~~~~~~~~~~

index.ts:620:27 - error TS2769: No overload matches this call.
  Overload 1 of 6, '(port: number, hostname: string, backlog: number, callback?: (() => void) | undefined): Server<typeof IncomingMessage, typeof ServerResponse>', gave the following error.
    Argument of type 'string | 5000' is not assignable to parameter of type 'number'.
      Type 'string' is not assignable to type 'number'.
  Overload 2 of 6, '(port: number, hostname: string, callback?: (() => void) | undefined): Server<typeof IncomingMessage, typeof ServerResponse>', gave the following error.
    Argument of type 'string | 5000' is not assignable to parameter of type 'number'.
      Type 'string' is not assignable to type 'number'.

620 const server = app.listen(PORT, '0.0.0.0', () => {
                              ~~~~


middleware/error-handler.ts:1:10 - error TS2300: Duplicate identifier 'Request'.

1 import { Request, Response, NextFunction } from 'express';
           ~~~~~~~

middleware/error-handler.ts:1:19 - error TS2300: Duplicate identifier 'Response'.

1 import { Request, Response, NextFunction } from 'express';
                    ~~~~~~~~

middleware/error-handler.ts:1:29 - error TS2300: Duplicate identifier 'NextFunction'.

1 import { Request, Response, NextFunction } from 'express';
                              ~~~~~~~~~~~~

middleware/error-handler.ts:26:14 - error TS2300: Duplicate identifier 'errorHandler'.

26 export const errorHandler = (
                ~~~~~~~~~~~~

middleware/error-handler.ts:147:10 - error TS2300: Duplicate identifier 'Request'.

147 import { Request, Response, NextFunction } from 'express';
             ~~~~~~~

middleware/error-handler.ts:147:19 - error TS2300: Duplicate identifier 'Response'.

147 import { Request, Response, NextFunction } from 'express';
                      ~~~~~~~~

middleware/error-handler.ts:147:29 - error TS2300: Duplicate identifier 'NextFunction'.

147 import { Request, Response, NextFunction } from 'express';
                                ~~~~~~~~~~~~

middleware/error-handler.ts:154:17 - error TS2300: Duplicate identifier 'errorHandler'.

154 export function errorHandler(err: ApiError, req: Request, res: Response, next: NextFunction) {
                    ~~~~~~~~~~~~

middleware/security.ts:75:28 - error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.

75   const sessionToken = req.session?.csrfToken;
                              ~~~~~~~

middleware/security.ts:182:12 - error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.

182   if (!req.session?.userId) {
               ~~~~~~~

middleware/security.ts:190:12 - error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.

190   if (!req.session?.userId || !req.session?.isAdmin) {
               ~~~~~~~

middleware/security.ts:190:36 - error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.

190   if (!req.session?.userId || !req.session?.isAdmin) {
                                       ~~~~~~~

middleware/server-timing.ts:26:3 - error TS2322: Type '{ startTime: number; metrics: Map<any, any>; }' is not assignable to type 'TimingContext & { addMetric: (name: string, duration?: number | undefined, description?: string | undefined) => void; startTimer: (name: string) => { end: (description?: string | undefined) => void; }; }'.
  Type '{ startTime: number; metrics: Map<any, any>; }' is missing the following properties from type '{ addMetric: (name: string, duration?: number | undefined, description?: string | undefined) => void; startTimer: (name: string) => { end: (description?: string | undefined) => void; }; }': addMetric, startTimer

26   req.timing = {
     ~~~~~~~~~~

middleware/server-timing.ts:32:3 - error TS18048: 'req.timing' is possibly 'undefined'.

32   req.timing.addMetric = (name: string, duration?: number, description?: string) => {
     ~~~~~~~~~~

middleware/server-timing.ts:36:3 - error TS18048: 'req.timing' is possibly 'undefined'.

36   req.timing.startTimer = (name: string) => {
     ~~~~~~~~~~

midi-service.ts:570:50 - error TS18048: 'filters.style' is possibly 'undefined'.

570           rhythm.filename.toLowerCase().includes(filters.style.toLowerCase()) ||
                                                     ~~~~~~~~~~~~~

midi-service.ts:571:80 - error TS18048: 'filters.style' is possibly 'undefined'.

571           (rhythm.original_path && rhythm.original_path.toLowerCase().includes(filters.style.toLowerCase()))
                                                                                   ~~~~~~~~~~~~~

migrate.ts:5:16 - error TS7016: Could not find a declaration file for module 'ws'. '/home/runner/workspace/node_modules/ws/index.js' implicitly has an 'any' type.
  Try `npm i --save-dev @types/ws` if it exists or add a new declaration (.d.ts) file containing `declare module 'ws';`

5 import ws from 'ws';
                 ~~~~

routes/audioldm2.ts:121:38 - error TS2345: Argument of type '{ dataDir: string; instanceWord: any; objectClass: any; outputDir: string; maxTrainSteps: number; }' is not assignable to parameter of type 'AudioLDM2Config'.
  Property 'modelPath' is missing in type '{ dataDir: string; instanceWord: any; objectClass: any; outputDir: string; maxTrainSteps: number; }' but required in type 'AudioLDM2Config'.

121     audioldm2Service.trainDreamBooth(config)
                                         ~~~~~~

  audioldm2-service.ts:8:3
    8   modelPath: string;
        ~~~~~~~~~
    'modelPath' is declared here.

routes/audioldm2.ts:139:16 - error TS18046: 'error' is of type 'unknown'.

139       details: error.message
                   ~~~~~

routes/audioldm2.ts:153:16 - error TS18046: 'error' is of type 'unknown'.

153       details: error.message
                   ~~~~~

routes/audioldm2.ts:180:16 - error TS18046: 'error' is of type 'unknown'.

180       details: error.message
                   ~~~~~

routes/midi.ts:63:13 - error TS2339: Property 'existsSync' does not exist on type 'typeof import("node:fs/promises")'.

63     if (!fs.existsSync(midiDir)) {
               ~~~~~~~~~~

routes/midi.ts:69:22 - error TS2339: Property 'readdirSync' does not exist on type 'typeof import("node:fs/promises")'.

69     const files = fs.readdirSync(midiDir)
                        ~~~~~~~~~~~

routes/midi.ts:70:15 - error TS7006: Parameter 'file' implicitly has an 'any' type.

70       .filter(file => file.endsWith('.mid') || file.endsWith('.midi'))
                 ~~~~

routes/midi.ts:71:12 - error TS7006: Parameter 'filename' implicitly has an 'any' type.

71       .map(filename => {
              ~~~~~~~~

routes/midi.ts:73:26 - error TS2339: Property 'statSync' does not exist on type 'typeof import("node:fs/promises")'.

73         const stats = fs.statSync(filePath);
                            ~~~~~~~~

routes/voice.ts:77:16 - error TS18046: 'error' is of type 'unknown'.

77       details: error.message
                  ~~~~~

routes/voice.ts:157:16 - error TS18046: 'error' is of type 'unknown'.

157       details: error.message
                   ~~~~~

routes/voice.ts:213:16 - error TS18046: 'error' is of type 'unknown'.

213       details: error.message
                   ~~~~~

routes/voice.ts:248:16 - error TS18046: 'error' is of type 'unknown'.

248       details: error.message
                   ~~~~~

shutdown/graceful-shutdown.ts:100:26 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.

100       this.forceShutdown(error);
                             ~~~~~

../shared/schema.ts:44:14 - error TS7022: 'songs' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.

44 export const songs = pgTable("songs", {
                ~~~~~

../shared/schema.ts:53:54 - error TS7024: Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.

53   parentSongId: integer("parent_song_id").references(() => songs.id, { onDelete: "set null" }),
                                                        ~~~~~~~~~~~~~~

../shared/schema.ts:182:13 - error TS2300: Duplicate identifier 'User'.

182 export type User = typeof users.$inferSelect;
                ~~~~

../shared/schema.ts:186:13 - error TS2300: Duplicate identifier 'Song'.

186 export type Song = typeof songs.$inferSelect;
                ~~~~

../shared/schema.ts:189:13 - error TS2300: Duplicate identifier 'VoiceSample'.

189 export type VoiceSample = typeof voiceSamples.$inferSelect;
                ~~~~~~~~~~~

../shared/schema.ts:192:13 - error TS2300: Duplicate identifier 'VoiceClone'.

192 export type VoiceClone = typeof voiceClones.$inferSelect;
                ~~~~~~~~~~

../shared/schema.ts:198:13 - error TS2300: Duplicate identifier 'LicenseAcknowledgment'.

198 export type LicenseAcknowledgment = typeof licenseAcknowledgments.$inferSelect;
                ~~~~~~~~~~~~~~~~~~~~~

../shared/schema.ts:380:13 - error TS2300: Duplicate identifier 'User'.

380 export type User = z.infer<typeof UserSchema>;
                ~~~~

../shared/schema.ts:384:13 - error TS2300: Duplicate identifier 'Song'.

384 export type Song = z.infer<typeof SongSchema>;
                ~~~~

../shared/schema.ts:388:13 - error TS2300: Duplicate identifier 'VoiceSample'.

388 export type VoiceSample = z.infer<typeof VoiceSampleSchema>;
                ~~~~~~~~~~~

../shared/schema.ts:392:13 - error TS2300: Duplicate identifier 'VoiceClone'.

392 export type VoiceClone = z.infer<typeof VoiceCloneSchema>;
                ~~~~~~~~~~

../shared/schema.ts:396:13 - error TS2300: Duplicate identifier 'LicenseAcknowledgment'.

396 export type LicenseAcknowledgment = z.infer<typeof LicenseAcknowledgmentSchema>;
                ~~~~~~~~~~~~~~~~~~~~~


Found 70 errors in 12 files.

Errors  Files
    11  db.ts:5
    15  index.ts:43
     8  middleware/error-handler.ts:1
     4  middleware/security.ts:75
     3  middleware/server-timing.ts:26
     2  midi-service.ts:570
     1  migrate.ts:5
     4  routes/audioldm2.ts:121
     5  routes/midi.ts:63
     4  routes/voice.ts:77
     1  shutdown/graceful-shutdown.ts:100
    12  ../shared/schema.ts:44
❌ 🔨 Building TypeScript server failed: Command failed: cd server && npx tsc